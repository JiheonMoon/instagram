<!DOCTYPE html>

시작 태그와 닫는 태그로 이루어져 있음
<태그명 속성 = "속성값"> ... </태그명>

html 주석
<!--내용 -->

<html> ~ </html>
이 사이에 적힌 코드는 html이다

<head> ~ </head>
이 페이지의 meta 정보를 포함한다
인코딩타입, 제목
초기 페이지 렌더링시 불러와야한 외부링크를 정의

<body> ~ </body>
html문서 에서 실질적으로 보이는 영역을 정의하는 구간
ex)글 이미지 링크 테이블 등

git
버전관리 프로그램

버튼의 표현 <button>
버튼을 표현할때는 button태그를 활용
여는 태그와 닫는 태그 사이에 입력한 무자가 버튼에 기재
버튼도 block속성이 있으므로 자동으로 줄바꿈 표현

문서에 이미지 삽입하기 <img>
이미지는 웹페이지의 필수 구성요소
이미지를 삽입할때는 <img>태그를 사용한다
당연하게도 image의 줄임말

<img src = "경로">

이미지 경로는 컴퓨터 저장장치 내의 파일경로도 되고
외부 이미지의 url을 입력해도 좋음

추상적 정보의 컨테이너 -<div>
좌측에는 프로필 사진을 넣고 우측에는 아이디와 편집버튼을 넣고 싶지만 뜻대로 되지 않는다
위치가 제멋대로인 이유는 현재 우리가 브라우저에게 전달해준 정보가 부족하기 때문
머리속에서 정보를 쪼개고, 뭉치며 어떤 정보끼리 그룹지을지 고민하는 습관을 들여야함
머리속에서 쪼개놓은 정보를 브라우저에 전달할때 사용하는 코드가 <div>

정보의 단위 <div>태그
태그 자체에는 별다른 기능이 없다
block 속성을 가져 자동으로 줄이 바뀐다
<div>는 다른 정보를 담는 그릇으로 활용될때 빛을 발하는 도구이다
<div>~</div> 사이에 정보를 입력하면 된다

<div>
   정보1
   정보2
</div>

추상적인 수준에서 정보를 분할하는 사실은 매력적인 행위지만 <div>태그를 CSS와 함께 활용할때
비로소 정보를 정돈하여 전달하는 능력이 극대화된다
덕분에 <div>는 전세계 모든 웹페이지에서 가장 자주, 많이 등장하는 태그이다.
프로필 사진과 이름, 버튼 영영의 정보를 미리 쪼개보자.

<div>
   프로필사진
   <div>
          아이디
          버튼
   </div>
</div>

검색창 구현하기 - <input> 태그
사용자로부터 정보를 입력받을수 있는 태그

html만 사용하면 기초적인 디자인의 홈페이지만 만들수 있다
css를 공부하면 html로 제작한 홈페이지에
디자인적 요소를 추가해 더욱 아름다운 웹페이지를 제작할수 있다

선택자

선택자의 종류
1. 태그
가장 손쉽게 사용할 수 있는 선택자
HTML 문서는 태그를 활용해 작성되기 때문
HTML 코드를 작성할때 사용한 태그를 그대로 선택자로 활용할수 있으며
실제로 CSS코드를 사용할때 태그 이름만을 사용한다

- 가장 넓은 범위에 동시다발적으로 디자인을 적용하는 방법
- 예를들어 <div> 태그를 선택자로 삼으면 페이지 내의 모든 <div> 태그의 글자들에 css를 적용시킨다

2.클래스
클래스 선택자
-클래스는 하나의 그룹이라는 뜻
<태그명 class = "클래스명">
	컨텐츠
</태그명>

3.아이디 id
클래스와 달리 화면에 단 한개만 존재하는 특성
웹사이트에 중복되는 id를 만들수 없듯이, html에서의 아이디도 비슷한 개념이다

<태그명 id = "아이디값">
	내용
</태그명>

클래스와 아이디를 구분하는 이유
HTML의 정보 전달력 향상에 있음
다른 사람이 만든 HTML 코드를 처음 읽어야 하는 경우
CLASS는 한 웹페이지에 여러번 등장할수 있지만 ID는 한번만 등장함

HTML코드를 읽기만 해도 어떤 정보가 반복되는지,
어떤 정보가 단 한번만 등장하는 유일한 정보인지 구분할수 있음

CSS 사용해보기
1.style 속성을 활용한 css 적용
시작 태그에 style 속성을 부여해 css를 적용시킬수 있음

<태그명 style = "어떤 스타일 : 스타일값">

2.<style> 태그를 활용한 css 적용

<style>
     css문법
</style>

선택자{
      "어떤 스타일 : 스타일값";
      "어떤 스타일 : 스타일값";
	}

3.css코드를 별도의 파일로 분리하여 관리한다
.css 확장자를 가진 파일을 만들고 안에 css를 정의

css파일을 적용시키려는 곳에서 다음과 같은 코드로 작성
<link href="경로" rel="stylesheet">

css파일을 분리하는 이유
가장 큰 이유는 html 파일 내에서 디자인과 관련된 정보를 제거할수 있다는점

html코드가 정보의 전달과 웹페이지의 구조 설계라는 본연의 기능에 집중할수 있게 된다

협업의 편의성
잘하는 웹개발자들은 css를 직접 작성하여
본인의 생각대로 직접 코드를 표현하는 경우가 많다
의사소통을 한단계 생략하여 완벽히 의도대로 디자인을 구현 가능

